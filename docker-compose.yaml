services:
  #User cluster
  user_service:
    container_name: user_service
    build:
      context: .
      dockerfile: ./UserService/Dockerfile
    environment:
      - 'DB_USERNAME=admin'
      - 'DB_PASSWORD=admin'
      - 'DB_URL=jdbc:postgresql://user_db:5432/spaceStationUser'
      - 'PORT=8082'
      - 'KAFKA_BOOTSTRAP_SERVERS=kafka1:29092,kafka2:29094'
    ports:
      - "8082:8082"
    depends_on:
      - user_db
      - kafka-ui

  user_db:
    container_name: user_db
    image: postgres:15
    environment:
      - 'POSTGRES_DB=spaceStationUser'
      - 'POSTGRES_USER=admin'
      - 'POSTGRES_PASSWORD=admin'
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_user:/var/lib/postgresql/data

  #Wiki cluster
  wiki_core_service:
    container_name: wiki_core_service
    build:
      context: .
      dockerfile: ./WikiCoreService/Dockerfile
    environment:
      - 'DB_USERNAME=admin'
      - 'DB_PASSWORD=admin'
      - 'DB_URL=jdbc:postgresql://article_db:5432/spaceStationArticle'
      - 'PORT=8081'
      - 'KAFKA_BOOTSTRAP_SERVERS=kafka1:29092,kafka2:29094'
    ports:
      - "8081:8081"
    depends_on:
      - article_db
      - kafka-ui

  article_db:
    image: postgres:15
    container_name: article_db
    environment:
      - 'POSTGRES_DB=spaceStationArticle'
      - 'POSTGRES_USER=admin'
      - 'POSTGRES_PASSWORD=admin'
    ports:
      - "5431:5432"
    volumes:
      - postgres_data_article:/var/lib/postgresql/data

  # Kafka cluster
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    environment:
      - 'ZOOKEEPER_CLIENT_PORT=2181'
      - 'ZOOKEEPER_TICK_TIME=2000'
    ports:
      - "22181:2181"

  kafka1:
    image: confluentinc/cp-kafka:7.3.3 # ласт версия кафки с автозукипером, дальше КРафт
    hostname: kafka1
    environment:
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_BROKER_ID=1'
      - 'KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:29093'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:29093'
      - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - 'KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
      - 'KAFKA_AUTO_CREATE_TOPICS_ENABLE=true'
    ports:
      - "29092:29092"  # Для внутреннего / PLAINTEXT
      - "29093:29093"  # Для внешнего    / PLAINTEXT_HOST
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:7.3.3
    hostname: kafka2
    environment:
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_BROKER_ID=2'
      - 'KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:29094,PLAINTEXT_HOST://0.0.0.0:29095'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:29094,PLAINTEXT_HOST://localhost:29095'
      - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - 'KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
      - 'KAFKA_AUTO_CREATE_TOPICS_ENABLE=true'
    ports:
      - "29094:29094"  # Для внутреннего
      - "29095:29095"  # Для внешнего
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:29092,kafka2:29094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka1
      - kafka2
      - zookeeper
    depends_on:
      - kafka1
      - kafka2

  #Auth cluster
  keycloak_web:
    image: keycloak/keycloak:latest
    container_name: keycloak_web
    environment:
      - 'KC_DB=postgres'
      - 'KC_DB_URL=jdbc:postgresql://keycloak_db:5432/keycloak'
      - 'KC_DB_USERNAME=keycloak'
      - 'KC_DB_PASSWORD=password'

      - 'KC_HOSTNAME=localhost'
      - 'KC_HOSTNAME_STRICT=false'
      - 'KC_HTTP_ENABLED=true'
      - 'KC_HTTP_PORT=8080'

      - 'KC_LOG_LEVEL=info'
      - 'KC_METRICS_ENABLED=true'
      - 'KC_HEALTH_ENABLED=true'

      - 'KC_BOOTSTRAP_ADMIN_USERNAME=admin'
      - 'KC_BOOTSTRAP_ADMIN_PASSWORD=admin'
    command: start-dev
    depends_on:
      - keycloak_db
    ports:
      - "8083:8080"

  keycloak_db:
    image: postgres:15
    container_name: keycloak_db
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - 5430:5432

  #ApiGateway cluster
  api_gateway:
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    environment:
      - 'PORT=8084'
    ports:
      - "8084:8084"

volumes:
  postgres_data_keycloak:
  postgres_data_user:
  postgres_data_article:
